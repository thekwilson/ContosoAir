trigger:
  - master

stages:
- stage: Build
  jobs:
  - job: Build

    pool:
      vmImage: ubuntu-16.04

    steps:
      - task: Npm@1
        inputs:
          command: install
      - script: 'npm test'
        displayName: 'Run unit tests'
        continueOnError: true
      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: $(System.DefaultWorkingDirectory)/test-report.xml
      - task: PublishCodeCoverageResults@1
        displayName: 'Publish Code Coverage'
        condition: 'in(variables[''Agent.JobStatus''], ''Succeeded'')'
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/*coverage.xml'
          reportDirectory: $(System.DefaultWorkingDirectory)/coverage
      - task: ArchiveFiles@2
        displayName: 'Archive sources'
        inputs:
          rootFolderOrFile: $(Build.SourcesDirectory)
          includeRootFolder: false
      - task: CopyFiles@2
        displayName: 'Copy ARM templates'
        inputs:
          SourceFolder: deployment
          Contents: '*.json'
          TargetFolder: $(build.artifactstagingdirectory)/Templates
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'

- stage: Deploy
  jobs:
  - job: Deploy
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        downloadType: 'single'
        downloadPath: '$(System.ArtifactsDirectory)'